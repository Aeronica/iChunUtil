//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//You need to successfully setupDecompWorkspace (with the ATs) and acquire the Morph API in order to use build this.//
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven-publish'

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
compileJava {
    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
}

def mcversion = "1.12.2"
version = "7.1.4"
group = "me.ichun.ichunutil"
archivesBaseName = "iChunUtil-" + mcversion

minecraft {
    version = "1.12.2-14.23.2.2624"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "stable_39"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

// To publish locally use: gradlew publishToMavenLocal
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = archivesBaseName
            from components.java
            artifact sourcesJar
            artifact apiJar
        }
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}


jar {
	manifest {
		attributes 'FMLAT' : 'iChunUtil_at.cfg'
	}
    from sourceSets.main.output
    from sourceSets.api.output
}

// deobf jars
// No longer needed
//task deobfJar(type: Jar) {
//    from sourceSets.main.output
//    classifier = 'deobf'
//    manifest {
//        attributes 'FMLAT' : 'iChunUtil_at.cfg'
//        //attributes 'FMLAT' : 'iChunUtil-deobf_at.cfg'
//    }
//}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
    from sourceSets.api.allJava
}

// api jar
task apiJar(type: Jar) {
    from sourceSets.main.java
    include "me/ichun/mods/ichunutil/api/**"
    from sourceSets.main.output
    include "me/ichun/mods/ichunutil/api/**"
    classifier = 'api'
}

artifacts {
    archives sourcesJar
    archives apiJar
}

// make sure all of these happen when we run build
// build.dependsOn sourceJar, deobfJar, apiJar
//build.dependsOn sourceJar, apiJar